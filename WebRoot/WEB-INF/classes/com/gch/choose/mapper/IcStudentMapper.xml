<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gch.choose.mapper.IcStudentMapper" >
  <resultMap id="BaseResultMap" type="com.gch.choose.pojo.IcStudent" >
    <id column="stu_id" property="stuId" jdbcType="BIGINT" />
    <result column="stu_name" property="stuName" jdbcType="VARCHAR" />
    <result column="stu_sex" property="stuSex" jdbcType="VARCHAR" />
    <result column="stu_number" property="stuNumber" jdbcType="BIGINT" />
    <result column="stu_sorting" property="stuSorting" jdbcType="VARCHAR" />
    <result column="stu_professional" property="stuProfessional" jdbcType="VARCHAR" />
    <result column="stu_course_id" property="stuCourseId" jdbcType="BIGINT" />
    <result column="stu_password" property="stuPassword" jdbcType="BIGINT" />
    <result column="stu_email" property="stuEmail" jdbcType="VARCHAR" />
    <result column="stu_mobile" property="stuMobile" jdbcType="VARCHAR" />
    <result column="stu_zipcode" property="stuZipcode" jdbcType="VARCHAR" />
    <result column="stu_address" property="stuAddress" jdbcType="VARCHAR" />
    <result column="stu_createtime" property="stuCreatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stu_id, stu_name, stu_sex, stu_number, stu_sorting, stu_professional, stu_course_id, 
    stu_password, stu_email, stu_mobile, stu_zipcode, stu_createtime
  </sql>
  <select id="selectCountByStuNumber" parameterType="String" resultType="int">
  	select count(*) from ic_student
  	<where>
  		stu_number=#{stu_number}
  	</where>
  
  
  </select>
  
  <select id="selectIcStudentByIDPassword" parameterType="QueryVo" resultType="IcStudent">
  	select * from ic_student
  	<where>
  		stu_number=#{userID}
  	</where>
  </select>
  <update id="updateStudentByStuId" parameterType="IcStudent">
  	update ic_student
  	<set>
  		<if test="stu_name!=null">
  			stu_name=#{stu_name},
  		</if>
  		<if test="stu_number!=null">
  			stu_number=#{stu_number},
  		</if>
  		<if test="stu_sex!=null">
  			stu_sex=#{stu_sex},
  		</if>
  		<if test="stu_password!=null">
  			stu_password=#{stu_password},
  		</if>
  		<if test="stu_email!=null">
  			stu_email=#{stu_email},
  		</if>
  		<if test="stu_mobile!=null">
  			stu_mobile=#{stu_mobile},
  		</if>
  	</set>
  	<where>
  		stu_id=#{stu_id}
  	</where>
  </update>
  <select id="icStudentCountByQueryVo"  parameterType="QueryVo" resultType="Integer">
  	select count(1) from ic_student
  	<where>
  		<if test="stuName !=null and stuName!=''">
  			stu_name like "%"#{stuName}"%"
  		</if>
  		<if test="stuNumber !=null and stuNumber!=''">
  			and stu_number like "%"#{stuNumber}"%"
  		</if>
  	</where>
  
  </select>
  <select id="selectStudentByQueryVo" parameterType="QueryVo" resultType="IcStudent">
  	select * from ic_student
  	<where>
  		<if test="stuName !=null and stuName!=''">
  			stu_name like "%"#{stuName}"%"
  		</if>
  		<if test="stuNumber !=null and stuNumber!=''">
  			and stu_number like "%"#{stuNumber}"%"
  		</if>
  	</where>
  	limit #{startRow},#{size}
  </select>
   
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gch.choose.pojo.IcStudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ic_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultType="IcStudent" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ic_student
    where stu_id = #{stu_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ic_student
    where stu_id = #{stuId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gch.choose.pojo.IcStudentExample" >
    delete from ic_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gch.choose.pojo.IcStudent" >
  <selectKey  keyProperty="stu_id" order="AFTER" resultType="Long">
  		SELECT LAST_INSERT_ID()
  </selectKey>
    insert into ic_student (stu_name, stu_sex, 
      stu_number, stu_sorting, stu_professional, 
      stu_course_id, stu_password, stu_email, 
      stu_mobile, stu_zipcode,  
      stu_createtime)
    values ( #{stu_name,jdbcType=VARCHAR}, #{stu_sex,jdbcType=VARCHAR}, 
      #{stu_number,jdbcType=BIGINT}, #{stu_sorting,jdbcType=VARCHAR}, #{stu_professional,jdbcType=VARCHAR}, 
      #{stu_course_id,jdbcType=BIGINT}, #{stu_password,jdbcType=BIGINT}, #{stu_email,jdbcType=VARCHAR}, 
      #{stu_mobile,jdbcType=VARCHAR}, #{stu_zipcode,jdbcType=VARCHAR},
      #{ stu_createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gch.choose.pojo.IcStudent" >
    insert into ic_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="stuName != null" >
        stu_name,
      </if>
      <if test="stuSex != null" >
        stu_sex,
      </if>
      <if test="stuNumber != null" >
        stu_number,
      </if>
      <if test="stuSorting != null" >
        stu_sorting,
      </if>
      <if test="stuProfessional != null" >
        stu_professional,
      </if>
      <if test="stuCourseId != null" >
        stu_course_id,
      </if>
      <if test="stuPassword != null" >
        stu_password,
      </if>
      <if test="stuEmail != null" >
        stu_email,
      </if>
      <if test="stuMobile != null" >
        stu_mobile,
      </if>
      <if test="stuZipcode != null" >
        stu_zipcode,
      </if>
      <if test="stuAddress != null" >
        stu_address,
      </if>
      <if test="stuCreatetime != null" >
        stu_createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        #{stuId,jdbcType=BIGINT},
      </if>
      <if test="stuName != null" >
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuNumber != null" >
        #{stuNumber,jdbcType=BIGINT},
      </if>
      <if test="stuSorting != null" >
        #{stuSorting,jdbcType=VARCHAR},
      </if>
      <if test="stuProfessional != null" >
        #{stuProfessional,jdbcType=VARCHAR},
      </if>
      <if test="stuCourseId != null" >
        #{stuCourseId,jdbcType=BIGINT},
      </if>
      <if test="stuPassword != null" >
        #{stuPassword,jdbcType=BIGINT},
      </if>
      <if test="stuEmail != null" >
        #{stuEmail,jdbcType=VARCHAR},
      </if>
      <if test="stuMobile != null" >
        #{stuMobile,jdbcType=VARCHAR},
      </if>
      <if test="stuZipcode != null" >
        #{stuZipcode,jdbcType=VARCHAR},
      </if>
      <if test="stuAddress != null" >
        #{stuAddress,jdbcType=VARCHAR},
      </if>
      <if test="stuCreatetime != null" >
        #{stuCreatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gch.choose.pojo.IcStudentExample" resultType="java.lang.Integer" >
    select count(*) from ic_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ic_student
    <set >
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=BIGINT},
      </if>
      <if test="record.stuName != null" >
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuSex != null" >
        stu_sex = #{record.stuSex,jdbcType=VARCHAR},
      </if>
      <if test="record.stuNumber != null" >
        stu_number = #{record.stuNumber,jdbcType=BIGINT},
      </if>
      <if test="record.stuSorting != null" >
        stu_sorting = #{record.stuSorting,jdbcType=VARCHAR},
      </if>
      <if test="record.stuProfessional != null" >
        stu_professional = #{record.stuProfessional,jdbcType=VARCHAR},
      </if>
      <if test="record.stuCourseId != null" >
        stu_course_id = #{record.stuCourseId,jdbcType=BIGINT},
      </if>
      <if test="record.stuPassword != null" >
        stu_password = #{record.stuPassword,jdbcType=BIGINT},
      </if>
      <if test="record.stuEmail != null" >
        stu_email = #{record.stuEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.stuMobile != null" >
        stu_mobile = #{record.stuMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.stuZipcode != null" >
        stu_zipcode = #{record.stuZipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.stuAddress != null" >
        stu_address = #{record.stuAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.stuCreatetime != null" >
        stu_createtime = #{record.stuCreatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ic_student
    set stu_id = #{record.stuId,jdbcType=BIGINT},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      stu_sex = #{record.stuSex,jdbcType=VARCHAR},
      stu_number = #{record.stuNumber,jdbcType=BIGINT},
      stu_sorting = #{record.stuSorting,jdbcType=VARCHAR},
      stu_professional = #{record.stuProfessional,jdbcType=VARCHAR},
      stu_course_id = #{record.stuCourseId,jdbcType=BIGINT},
      stu_password = #{record.stuPassword,jdbcType=BIGINT},
      stu_email = #{record.stuEmail,jdbcType=VARCHAR},
      stu_mobile = #{record.stuMobile,jdbcType=VARCHAR},
      stu_zipcode = #{record.stuZipcode,jdbcType=VARCHAR},
      stu_address = #{record.stuAddress,jdbcType=VARCHAR},
      stu_createtime = #{record.stuCreatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gch.choose.pojo.IcStudent" >
    update ic_student
    <set >
      <if test="stuName != null" >
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        stu_sex = #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuNumber != null" >
        stu_number = #{stuNumber,jdbcType=BIGINT},
      </if>
      <if test="stuSorting != null" >
        stu_sorting = #{stuSorting,jdbcType=VARCHAR},
      </if>
      <if test="stuProfessional != null" >
        stu_professional = #{stuProfessional,jdbcType=VARCHAR},
      </if>
      <if test="stuCourseId != null" >
        stu_course_id = #{stuCourseId,jdbcType=BIGINT},
      </if>
      <if test="stuPassword != null" >
        stu_password = #{stuPassword,jdbcType=BIGINT},
      </if>
      <if test="stuEmail != null" >
        stu_email = #{stuEmail,jdbcType=VARCHAR},
      </if>
      <if test="stuMobile != null" >
        stu_mobile = #{stuMobile,jdbcType=VARCHAR},
      </if>
      <if test="stuZipcode != null" >
        stu_zipcode = #{stuZipcode,jdbcType=VARCHAR},
      </if>
      <if test="stuAddress != null" >
        stu_address = #{stuAddress,jdbcType=VARCHAR},
      </if>
      <if test="stuCreatetime != null" >
        stu_createtime = #{stuCreatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gch.choose.pojo.IcStudent" >
    update ic_student
    set stu_name = #{stuName,jdbcType=VARCHAR},
      stu_sex = #{stuSex,jdbcType=VARCHAR},
      stu_number = #{stuNumber,jdbcType=BIGINT},
      stu_sorting = #{stuSorting,jdbcType=VARCHAR},
      stu_professional = #{stuProfessional,jdbcType=VARCHAR},
      stu_course_id = #{stuCourseId,jdbcType=BIGINT},
      stu_password = #{stuPassword,jdbcType=BIGINT},
      stu_email = #{stuEmail,jdbcType=VARCHAR},
      stu_mobile = #{stuMobile,jdbcType=VARCHAR},
      stu_zipcode = #{stuZipcode,jdbcType=VARCHAR},
      stu_address = #{stuAddress,jdbcType=VARCHAR},
      stu_createtime = #{stuCreatetime,jdbcType=TIMESTAMP}
    where stu_id = #{stuId,jdbcType=BIGINT}
  </update>
</mapper>